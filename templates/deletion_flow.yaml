AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Amazon S3 Find and Forget Deletion Flow

Parameters:
  DeletionTaskCPU:
    Type: String
  DeletionTaskMemory:
    Type: String
  DeletionTasksMaxNumber:
    Type: Number
  LogRetentionInDays:
    Type: Number
    Default: 7
  ResourcePrefix:
    Type: String
  VpcSecurityGroup:
    Type: String
  VpcSubnets:
    Type: String

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster

  ECRRepository:
    Type: AWS::ECR::Repository

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  AutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action: 
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: service-autoscaling
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - application-autoscaling:*
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - ecs:DescribeServices
                  - ecs:UpdateService
                Resource: "*"
  
  AutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref DeletionTasksMaxNumber
      MinCapacity: 0
      ResourceId: !Sub service/${ECSCluster}/${DeleteService.Name}
      RoleARN: !GetAtt AutoScalingRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ScaleInOut:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${DelObjQ.QueueName}-TaskScalingInOut
      PolicyType: StepScaling
      ScalingTargetId: !Ref AutoScalingTarget
      StepScalingPolicyConfiguration:
        Cooldown: 30
        AdjustmentType: ExactCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 1
            ScalingAdjustment: 0
          - MetricIntervalLowerBound: 1
            ScalingAdjustment: !Ref DeletionTasksMaxNumber

  DelObjQ:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      FifoQueue: true
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: 43200

  DelQSizeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref ScaleInOut
      AlarmDescription: Amazon S3 Find and Forget CloudWatch Alarm for DeletionQueue size, used to trigger Auto-Scaling for Deletion Fargate Tasks
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
        - Expression: SUM([m1, m2])
          Id: sum1
        - Id: m1
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt DelObjQ.QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt DelObjQ.QueueName
              MetricName: ApproximateNumberOfMessagesNotVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Sum
          ReturnData: false
      OKActions:
        - !Ref ScaleInOut
      Threshold: 0

  DeleteTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref DeleteTaskIAMRole
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      NetworkMode: awsvpc
      Memory: !Ref DeletionTaskMemory
      Cpu: !Ref DeletionTaskCPU
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: !Sub ${ResourcePrefix}_DeleteTask
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref DeleteTaskLogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'AWS::StackName'
          Environment:
            - Name: DELETE_OBJECTS_QUEUE
              Value: !Ref DelObjQ
            - Name: REGION
              Value: !Ref AWS::Region

  DeleteService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !GetAtt ECSCluster.Arn
      DesiredCount: 0
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups: [!Ref VpcSecurityGroup]
          Subnets: !Split [",", !Ref VpcSubnets]
      TaskDefinition: !Ref DeleteTaskDefinition

  DeleteTaskIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: SqsExecutionPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action: 
            - sqs:ChangeMessageVisibiliy
            - sqs:ChangeMessageVisibilityBatch 
            - sqs:DeleteMessage 
            - sqs:DeleteMessageBatch 
            - sqs:GetQueueAttributes 
            - sqs:ReceiveMessage
            Effect: Allow 
            Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${DelObjQ.QueueName}

  DeleteTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref LogRetentionInDays

Outputs:
  DeleteObjectsQueueUrl:
    Value: !Ref DelObjQ
  DeleteTaskIAMRoleArn:
    Value: !GetAtt DeleteTaskIAMRole.Arn
