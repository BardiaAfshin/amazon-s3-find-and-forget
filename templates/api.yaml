AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Amazon S3 Find and Forget API

Globals:
  Function:
    Runtime: python3.7
    Timeout: 180
    Tracing: Active
    Layers: !Ref CommonLayers
    Environment:
      Variables:
        DeletionQueueTable: !Ref DeletionQueueTableName
        DataMapperTable: !Ref DataMapperTableName
        LogLevel: !Ref LogLevel
  Api:
    EndpointConfiguration: REGIONAL
    TracingEnabled: true
    Cors: "'*'"
    Auth:
      DefaultAuthorizer: CognitoAuthorizer
      Authorizers:
        CognitoAuthorizer:
          UserPoolArn: !GetAtt CognitoUserPool.Arn

Parameters:
  DeletionQueueTableName:
    Description: Table name for Deletion Queue Table
    Type: String
  DataMapperTableName:
    Description: Table name for DataMapper Table
    Type: String
  StateMachineArn:
    Description: State Machine to invoke to process the deletion queue
    Type: String
  CognitoUserPoolName:
    Type: String
    Default: S3F2Pool
  CognitoUserPoolClientName:
    Type: String
    Default: S3F2PoolClient
  CommonLayers:
    Type: CommaDelimitedList
    Description: Common layers supplied to all functions
  LogLevel:
    Type: String
    Default: INFO
    AllowedValues:
      - CRITICAL
      - FATAL
      - ERROR
      - WARNING
      - INFO
      - DEBUG
      - NOTSET

Resources:
  # Cognito
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Ref CognitoUserPoolClientName
      GenerateSecret: false
  
  # Functions
  ## Queue
  EnqueueDeletion:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.enqueue_handler
      CodeUri: ../backend/lambdas/queue/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /queue
            Method: PATCH
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref DeletionQueueTableName
  GetDeletionQueue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.get_handler
      CodeUri: ../backend/lambdas/queue/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /queue
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DeletionQueueTableName
  CancelDeletion:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.cancel_handler
      CodeUri: ../backend/lambdas/queue/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /queue/matches/{match_id}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DeletionQueueTableName
  ProcessQueue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.process_handler
      CodeUri: ../backend/lambdas/queue/
      Environment:
        Variables:
          StateMachineArn: !Ref StateMachineArn
      Events:
        Get:
          Type: Api
          Properties:
            Path: /queue
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DeletionQueueTableName
        - Statement:
          - Action:
            - "states:ListStateMachines"
            - "states:DescribeStateMachine"
            - "states:StartExecution"
            Effect: "Allow"
            Resource: !Ref StateMachineArn
  # DataMappers
  CreateDataMapper:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.create_data_mapper_handler
      CodeUri: ../backend/lambdas/data_mappers/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /data_mappers/{data_mapper_id}
            Method: PUT
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref DataMapperTableName
  GetDataMappers:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.get_data_mappers_handler
      CodeUri: ../backend/lambdas/data_mappers/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /data_mappers
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DataMapperTableName
  DeleteDataMapper:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.delete_data_mapper_handler
      CodeUri: ../backend/lambdas/data_mappers/
      Events:
        Get:
          Type: Api
          Properties:
            Path: /data_mappers/{data_mapper_id}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DataMapperTableName
  # Jobs
  GetJob:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.get_job_handler
      CodeUri: ../backend/lambdas/jobs/
      Environment:
        Variables:
          StateMachineArn: !Ref StateMachineArn
      Events:
        Get:
          Type: Api
          Properties:
            Path: /jobs/{job_id}
            Method: get
      Policies:
        - Statement:
          - Action:
            - "states:ListStateMachines"
            - "states:ListExecutions"
            - "states:DescribeExecution"
            Effect: "Allow"
            Resource: "*"

Outputs:
  ApiUrl:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
  CognitoUserPoolId:
    Description: "Cognito User Pool Id"
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client Id"
    Value: !Ref CognitoUserPoolClient
